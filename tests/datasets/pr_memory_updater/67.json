{
  "inputs": {
    "repository": "Moonsong-Labs/ai-nexus",
    "pr_num": "67"
  },
  "outputs": {
    "output": "diff --git a/project_memories/global.md b/project_memories/global.md\nindex 53f5313..9ff43e9 100644\n--- a/project_memories/global.md\n+++ b/project_memories/global.md\n@@ -214,24 +214,24 @@ Most agents in AI Nexus follow a common structural and operational pattern, large\n     Each flow has a dedicated system prompt and a specific set of GitHub tools, managed via `CoderInstanceConfig`.\n *   **`prompts.py` (`src/coder/prompts.py`):**\n     *   `NEW_PR_SYSTEM_PROMPT`: System prompt for the `coder_new_pr` flow. Instructs the agent on creating a new branch (`code-agent-*`) and submitting a PR.\n-    *   `CHANGE_REQUEST_SYSTEM_PROMPT`: System prompt for the `coder_change_request` flow. Instructs the agent on applying changes to an existing PR branch.\n+    *   `CHANGE_REQUEST_SYSTEM_PROMPT`: System prompt for the `coder_change_request` flow. Instructs the agent on applying changes to an existing PR branch. **Updated** to specify that the agent needs to work on the PR's head branch and submit changes there.\n     *   The previous generic `SYSTEM_PROMPT` has been replaced by these more specific prompts.\n-*   **`tools.py` (`src/coder/tools.py`):**\n-    *   `GITHUB_TOOLS`: A list of tool names (e.g., `\"create_branch\"`, `\"get_contents\"`, `\"get_pull_request\"`) used to filter tools obtained from `GitHubToolkit` (for real API) or `mock_github_tools`. **Updated** to include tools for PR inspection like `\"get_pull_request\"` and `\"list_pull_requests_files\"`.\n+*   **`tools.py` (`src/coder/tools.py`):** (Note: Functionality largely provided by `src/common/components/github_tools.py`)\n+    *   `GITHUB_TOOLS`: A list of tool names (e.g., `\"create_branch\"`, `\"get_contents\"`, `\"get_pull_request\"`) used to filter tools obtained from `GitHubToolkit` (for real API) or `mock_github_tools`. **Updated** to include tools for PR inspection like `\"get_pull_request\"`, `\"list_pull_requests_files\"`, and `\"get_pull_request_head_branch\"`.\n     *   `get_github_tools(github_source: Union[GitHubAPIWrapper, MockGithubApi]) -> list[Tool]`:\n         *   If `github_source` is `MockGithubApi`, calls `mock_github_tools`.\n-        *   If `github_source` is `GitHubAPIWrapper`, gets tools from `GitHubToolkit.from_github_api_wrapper().get_tools()`.\n+        *   If `github_source` is `GitHubAPIWrapper`, gets tools from `GitHubToolkit.from_github_api_wrapper().get_tools()` and custom tools like `GetPullRequestHeadBranch`.\n         *   Applies `make_gemini_compatible` to each tool.\n         *   Filters the tools, returning only those whose names are present in the `GITHUB_TOOLS` list.\n     *   `mock_github_tools(mock_api: MockGithubApi) -> list[Tool]`:\n         *   Creates mocked versions of GitHub tools.\n         *   Tools created include: `create_file`, `read_file`, `update_file`, `delete_file`, `create_pull_request`, `create_a_new_branch`, `set_active_branch`.\n         *   The tool for getting directory/file contents is named **`get_files_from_a_directory`** (wraps `mock_api.get_files_from_directory`).\n-        *   **NEW Mocked Tools:** `get_pull_request`, `list_pull_requests_files` (wrapping corresponding `MockGithubApi` methods).\n-*   **`mocks.py` (`src/coder/mocks.py`):**\n+        *   **NEW Mocked Tools:** `get_pull_request`, `list_pull_requests_files`, `get_pull_request_head_branch` (wrapping corresponding `MockGithubApi` methods).\n+*   **`mocks.py` (`src/coder/mocks.py`):** (Note: Functionality largely provided by `src/common/components/github_mocks.py`)\n     *   `MockGithubApi`:\n         *   Methods: `set_active_branch`, `create_branch`, `_get_files_recursive`, `get_files_from_directory`, `create_pull_request`, `create_file`, `update_file`, `delete_file`, `read_file`.\n-        *   **NEW Methods:** `get_pull_request`, `list_pull_requests_files`.\n+        *   **NEW Methods:** `get_pull_request` (returns a simplified dictionary string representation of the PR), `list_pull_requests_files`, `get_pull_request_head_branch`.\n *   **`graph.py` (`src/coder/graph.py`):**\n     *   Defines `CoderInstanceConfig(Dataclass)`:\n         *   Attributes: `name: str`, `system_prompt: str`, `github_tools: List[str]` (list of specific tool names for this instance).\n@@ -240,7 +240,7 @@ Most agents in AI Nexus follow a common structural and operational pattern, large\n             *   `filter_tools(self, tools: List[Tool]) -> List[Tool]`: Filters a provided list of `Tool` objects to include only those whose names are specified in `self.github_tools`. Asserts that the number of filtered tools matches expectations.\n     *   Factory functions returning `CoderInstanceConfig`:\n         *   `coder_new_pr_config()`: Config for \"new PR\" flow. `github_tools` include: `\"set_active_branch\"`, `\"create_a_new_branch\"`, `\"get_files_from_a_directory\"`, `\"create_pull_request\"`, `\"create_file\"`, `\"update_file\"`, `\"read_file\"`, `\"delete_file\"`. Uses `NEW_PR_SYSTEM_PROMPT`.\n-        *   `coder_change_request_config()`: Config for \"change request\" flow. `github_tools` include: `\"set_active_branch\"`, `\"get_files_from_a_directory\"`, `\"create_file\"`, `\"update_file\"`, `\"read_file\"`, `\"delete_file\"`, `\"get_pull_request\"`, `\"list_pull_requests_files\"`. Uses `CHANGE_REQUEST_SYSTEM_PROMPT`.\n+        *   `coder_change_request_config()`: Config for \"change request\" flow. `github_tools` include: `\"set_active_branch\"`, `\"get_files_from_a_directory\"`, `\"create_file\"`, `\"update_file\"`, `\"read_file\"`, `\"delete_file\"`, `\"get_pull_request\"`, `\"list_pull_requests_files\"`, `\"get_pull_request_head_branch\"`. Uses `CHANGE_REQUEST_SYSTEM_PROMPT`.\n     *   `_graph_builder(github_toolset: list[Tool], system_prompt: str) -> StateGraph` (renamed from top-level `graph_builder`):\n         *   Constructs the `StateGraph(State)`.\n         *   Initializes LLM (e.g., `gemini-2.0-flash`).\n@@ -391,6 +391,7 @@ The project uses `pytest` for testing and integrates with LangSmith for evaluati\n         *   Contains integration tests for the Coder agent's GitHub interactions using `MockGithubApi`.\n         *   Tests now instantiate the graph using `coder_new_pr_config().graph_builder(github_tools).compile()`.\n         *   The custom evaluation framework using `openevals` has been moved to `tests/integration_tests/eval_coder.py`.\n+        *   **NEW Test:** `test_coder_changes_server_port_on_existing_pr` verifies that the Coder agent, using `coder_change_request_config()`, correctly applies changes to the head branch of a mocked existing pull request.\n     *   **`eval_coder.py` (`tests/integration_tests/eval_coder.py`) (NEW):**\n         *   Defines a custom evaluation framework for the Coder agent (specifically the `coder_new_pr` flow) using `openevals`.\n         *   `EVAL_PROMPT`: A detailed prompt for an LLM judge to review the Coder agent's trajectory (branch creation, code changes vs. expectations).\n@@ -535,12 +536,12 @@ ai-nexus/\n \u2502   \u2502   \u2514\u2500\u2500 system_prompt.md      # System prompt for Code Reviewer\n \u2502   \u251c\u2500\u2500 coder/                    # Coder agent: writes code, interacts with GitHub (Now split into new_pr and change_request flows)\n \u2502   \u2502   \u251c\u2500\u2500 __init__.py           # Exports graph_new_pr, graph_change_request\n-\u2502   \u2502   \u251c\u2500\u2500 graph.py              # Defines CoderInstanceConfig, _graph_builder, and config factories for new_pr and change_request flows\n+\u2502   \u2502   \u251c\u2500\u2500 graph.py              # Defines CoderInstanceConfig, _graph_builder, and config factories for new_pr and change_request flows (UPDATED: coder_change_request_config includes get_pull_request_head_branch tool)\n \u2502   \u2502   \u251c\u2500\u2500 lg_server.py          # NEW: Exposes compiled Coder graphs (graph_new_pr, graph_change_request) for LangGraph Server, handles dynamic GitHub source\n-\u2502   \u2502   \u251c\u2500\u2500 mocks.py              # Mock GitHub API for testing (UPDATED: new mock methods for PR details)\n-\u2502   \u2502   \u251c\u2500\u2500 prompts.py            # UPDATED: NEW_PR_SYSTEM_PROMPT, CHANGE_REQUEST_SYSTEM_PROMPT\n+\u2502   \u2502   \u251c\u2500\u2500 mocks.py              # Mock GitHub API for testing (UPDATED: MockGithubApi methods get_pull_request, get_pull_request_head_branch)\n+\u2502   \u2502   \u251c\u2500\u2500 prompts.py            # UPDATED: NEW_PR_SYSTEM_PROMPT, CHANGE_REQUEST_SYSTEM_PROMPT (CHANGE_REQUEST_SYSTEM_PROMPT updated for PR head branch)\n \u2502   \u2502   \u251c\u2500\u2500 state.py              # Defines Coder agent state\n-\u2502   \u2502   \u251c\u2500\u2500 tools.py              # Defines GitHub tools (UPDATED: new tools for PR details, GITHUB_TOOLS list, get_github_tools function)\n+\u2502   \u2502   \u251c\u2500\u2500 tools.py              # Defines GitHub tools (UPDATED: GITHUB_TOOLS list includes get_pull_request_head_branch, mock_github_tools includes get_pull_request_head_branch)\n \u2502   \u2502   \u2514\u2500\u2500 README.md             # Setup instructions for GitHub App\n \u2502   \u251c\u2500\u2500 common/                   # Common utilities shared across agents\n \u2502   \u2502   \u2514\u2500\u2500 utils/                # Shared utility functions\n@@ -575,7 +576,7 @@ ai-nexus/\n     \u2502   \u2514\u2500\u2500 task_manager_dataset.py # Defines LangSmith dataset for Task Manager agent\n     \u251c\u2500\u2500 integration_tests/        # Integration tests for agents and full graph functionality\n     \u2502   \u251c\u2500\u2500 test_architect_agent.py # Tests for Architect agent\n-    \u2502   \u251c\u2500\u2500 test_coder.py         # REVISED: Basic integration tests for Coder, uses coder_new_pr_config. Advanced eval moved.\n+    \u2502   \u251c\u2500\u2500 test_coder.py         # REVISED: Basic integration tests for Coder, uses coder_new_pr_config. Advanced eval moved. (UPDATED: Added test_coder_changes_server_port_on_existing_pr)\n     \u2502   \u251c\u2500\u2500 eval_coder.py         # NEW: Custom evaluation framework for Coder agent (coder_new_pr flow) using openevals and LangSmith.\n     \u2502   \u251c\u2500\u2500 test_graph.py         # Tests agent_template memory\n     \u2502   \u251c\u2500\u2500 test_grumpy_agent.py"
  }
}