name: Update Project Memory
concurrency:
  group: ${{ github.workflow }}

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to process'
        required: true
        type: string

jobs:
  update_memory:
    # Run if:
    # 1. Manually dispatched OR
    # 2. PR merged to main AND not a self-generated PR
    if: |
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.merged == true &&
        github.event.pull_request.base.ref == 'main' &&
        !startsWith(github.event.pull_request.title, 'chore: Update project memory')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write      # To commit, push, and create branches
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history

      - name: Determine PR Number to Use
        id: pr_details
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "pr_num=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "Processing manually triggered for PR #${{ github.event.inputs.pr_number }}"
          else # pull_request event
            echo "pr_num=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "Processing automated trigger for merged PR #${{ github.event.pull_request.number }}"
          fi

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make scripts executable
        run: chmod +x scripts/update_project_memory_from_pr.sh scripts/fetch_pr_details.sh

      - name: Run update project memory script
        id: run_script
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          echo "Running script for PR #${{ steps.pr_details.outputs.pr_num }} on repository ${{ github.repository }}."
          bash scripts/update_project_memory_from_pr.sh \
            -r "${{ github.repository }}" \
            -p "${{ steps.pr_details.outputs.pr_num }}"
          echo "Script finished for PR #${{ steps.pr_details.outputs.pr_num }}."

      - name: Check for changes in project memory
        id: check_changes
        run: |
          git status # For logging purposes
          if git diff --quiet project_memories/global.md; then
            echo "No changes to project_memories/global.md for PR #${{ steps.pr_details.outputs.pr_num }}. Skipping PR creation."
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in project_memories/global.md for PR #${{ steps.pr_details.outputs.pr_num }}."
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push changes to main
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          # Ensure the main branch is checked out and up-to-date.
          # actions/checkout by default checks out the commit that triggered the workflow.
          # For 'pull_request' (closed, merged to main), this is a commit on main.
          # For 'workflow_dispatch', this defaults to the default branch (main).
          # Explicitly checkout main and pull to be safe and get latest updates.
          git checkout main
          git pull origin main

          git add project_memories/global.md
          git commit -m "chore: Update project memory from PR #${{ steps.pr_details.outputs.pr_num }}"
          git push origin main
          echo "Changes committed and pushed directly to main for PR #${{ steps.pr_details.outputs.pr_num }}."