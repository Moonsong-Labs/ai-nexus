# This workflow will run checks for the current project

name: Checks

on:
  push:
    branches: ["main"]
  pull_request:
    branches: [main]
  workflow_dispatch:

# If another push to the same PR or branch happens while this workflow is still running,
# cancel the earlier run in favor of the next run.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: make deps
      - name: Lint
        run: make lint
  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install codespell
        uses: codespell-project/actions-codespell@v2
      - name: Check code spelling
        run: make spell-check
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: make deps
      - name: Run tests
        run: make test-unit
  coder-tests:
    name: Coder Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: make deps
      - name: Run tests
        run: make test-coder
        env:
          GOOGLE_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.head_ref }}
  #     - name: Install uv
  #       run: |
  #         curl -LsSf https://astral.sh/uv/install.sh | sh
  #     - name: Install dependencies
  #       run: make deps
  #     - name: Run integration tests
  #       run: make test-integration
  smoke-test:
    name: Smoke test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Create .env file
        run: echo "GOOGLE_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: make deps
      - name: Run smoke test
        run: |
          cd tests/smoke/langgraph_dev
          npm i
          npm test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: langgraph-test-result.png
          path: ./tests/smoke/langgraph_dev/langgraph-test-result.png
          if-no-files-found: error
          retention-days: 10
